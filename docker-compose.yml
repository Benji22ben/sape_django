version: '3.8'

services:
  db_sape:
    container_name: db_sape
    image: postgres:16
    env_file:
      - .env
    ports:
      - "5436:5432"
    volumes:
      - sape-data:/var/lib/postgresql/data
    networks:
      - sape
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    container_name: adminer
    env_file:
      - .env
    image: adminer
    restart: unless-stopped
    ports:
      - '9090:8080'
    environment:
      - ADMINER_DEFAULT_SERVER=db
    networks:
      - sape
    depends_on:
      - db_sape

  minio:
    image: 'minio/minio:latest'
    ports:
      - '9000'
      - '8900:8900'
    env_file:
      - .env
    volumes:
      - 'minio:/data/minio'
    command: 'minio server /data/minio --console-address ":8900"'
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - 'http://localhost:9000/minio/health/live'
      retries: 3
      timeout: 5s
    networks:
      - sape

  createbuckets:
    image: minio/mc
    container_name: bucket-creator
    env_file:
      - .env
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c " /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin; /usr/bin/mc mb --quiet myminio/userclothespictures; /usr/bin/mc policy set none myminio/userclothespictures; "
    networks:
      - sape
  sape:
    container_name: sape_django
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8003:8000"
    depends_on:
      - "db_sape"
      - "minio"
    networks:
      - sape
      - traefik-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.sape.tls=true
      - traefik.http.routers.sape.entrypoints=websecure
      - traefik.http.routers.sape.tls.certresolver=traefik
      - traefik.http.routers.sape.rule=Host(`${SUBDOMAIN}.${DOMAIN_NAME}`)
      - traefik.http.services.sape.loadbalancer.server.port=8003
      - traefik.docker.network=traefik-network

networks:
  sape:
    external: true
  traefik-network:
    external: true

volumes:
  sape-data:
  minio:
    driver: local
